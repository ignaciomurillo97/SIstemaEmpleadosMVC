<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA6xJREFUaEPt
        mU1oE0EUx6PiF+pJagttdlNbreLRi6iIWOpFz4LfKEVEFEHvUkHFUuzupvagHgoeFMQvFD+op4qg0CLU
        urOpVXrwVMEP6qWxavzP5rXsbMcYNzMxkfzg0TTv7Xvzdr7eTGIVKpQgiW63xnC8/YbDrpg2ewH5YNjs
        U1a8sbjNnuPzZci+enuomh4rHdCwFjT+Cf5+h2TyFG7bazhuM7n5d9R1uo1+Y+QNzVtM23tkWG+Wk9vi
        Ere8nWjE13CjCpBx9M4Ocl8cDMttkzSExPVMh51BozbWXvBW1l70lvqCz/w7vP2z0A/Ln2U/MZdOURi9
        +I2UN2Lgb8Y77FsgLwPPB8Q9TWZ68FekmYHTWI2OxDKZWWSWP22Z2Uj+GHx8C/nMmJa7m6zUEk8ONSBA
        aE54Y6bjrSeTyGSHnL9UB3yzcbMrVU8m6sBbfxgKNJFIsnWkLhjDSm2Az7QQw3HvkVoNCcvbLASAoOsP
        kloZGLqHwnF4b5G6cODwgRjAfUYqtWCe8YpAiKWqV3gpAYeTgnMMA1IrB0N4kxALC0FNcqSK1NExLdYa
        dIw3NkgqbSDO62DMuOMeIFV0DItdDTpFV58jlTYQs12Iabs9pIoOHAmbFib5FlJpA3H4ZhlIhPWTKjpw
        8jHolJcapNJGomt4VTAm32NIFR04Enbdqm53Mam00dSeWhKMCUmTKjpwUgqJTJAqOnAiDK06h60glTbq
        7VRTMKaqofWfTPbw8muz86TSBg5tHWJMFcvvzNJ9hFTaQIxRMaa7h1TRkZUoOodXPOltDcaCqClROHAm
        FI28sIt0kPoT8An//cFYSkt5eRnPWkmtDNRUh8NxlJbxHMnBKs0TJHXBoMHN8CkeeVUfrDjyoy77zBtA
        JpGBH37B9yXkW89Rl/Oby4dJ0/aORr98YMe5j5BPnHnYq7rO9wvJUj3FuQ6all6tyeS+oGNvIRYWg228
        ik30jC7gYlpDqw3b2443bWNfeBd6JpfoTUbDlWkuud+YHJlPodWj6hIbPfWYr1By3bTo7RkOvzCA3EKw
        GTeGOSSNIXYTCWT3iRuZOdhor0nsgtJX3TG4yLfXSUPH4DLJDz0/siL+0CMtO7LJXIdelsSU9BXjTFQw
        ay8NzEXCtyUJBKWSTNHJKxmHPS2bZDBn7kiTmJJKMv8AvzLgP5jKkiAxHW8XmZc2uXoGVcYJMisPZMmU
        XRJTrGlz56HwvMuTwHA7SV+XJ3zOYILvpX8rVCgesdgvcvh7YBWOr9kAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="bunifuColorTransition1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>214, 17</value>
  </metadata>
</root>